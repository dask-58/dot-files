"use strict";
/*
    cpbooster "Competitive Programming Booster"
    Copyright (C) 2020  Sergio G. Sanchez V.

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.OnlineJudgeName = void 0;
var playwright_chromium_1 = require("playwright-chromium");
var fs = __importStar(require("fs"));
var Path = __importStar(require("path"));
var process_1 = require("process");
var GlobalConstants_1 = __importDefault(require("../../GlobalConstants"));
var open_1 = __importDefault(require("open"));
var Util_1 = __importDefault(require("../../Utils/Util"));
var OnlineJudgeName;
(function (OnlineJudgeName) {
    OnlineJudgeName["codeforces"] = "codeforces";
    OnlineJudgeName["atcoder"] = "atcoder";
    OnlineJudgeName["omegaup"] = "omegaup";
    OnlineJudgeName["szkopul"] = "szkopul";
    OnlineJudgeName["yandex"] = "yandex";
})(OnlineJudgeName = exports.OnlineJudgeName || (exports.OnlineJudgeName = {}));
var OnlineJudge = /** @class */ (function () {
    function OnlineJudge() {
        // session cookies are stored in this file
        this.sessionPath = Path.join(GlobalConstants_1.default.cpboosterHome, "cpbooster-session.json");
    }
    OnlineJudge.prototype.getSession = function () {
        var sessionString = fs.readFileSync(this.sessionPath).toString();
        var parsedSession = JSON.parse(sessionString);
        return parsedSession;
    };
    OnlineJudge.prototype.restoreSession = function (browser) {
        return __awaiter(this, void 0, void 0, function () {
            var previousSession, context;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        previousSession = fs.existsSync(this.sessionPath);
                        return [4 /*yield*/, browser.newContext({
                                userAgent: "chrome",
                                viewport: null
                            })];
                    case 1:
                        context = _a.sent();
                        if (previousSession) {
                            context.addCookies(this.getSession());
                        }
                        return [2 /*return*/, context];
                }
            });
        });
    };
    OnlineJudge.prototype.saveSession = function (context) {
        return __awaiter(this, void 0, void 0, function () {
            var cookies;
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, context.cookies()];
                    case 1:
                        cookies = _a.sent();
                        if (!fs.existsSync(GlobalConstants_1.default.cpboosterHome)) {
                            fs.mkdirSync(GlobalConstants_1.default.cpboosterHome, { recursive: true });
                        }
                        fs.writeFile(this.sessionPath, JSON.stringify(cookies, null, 2), function (err) { return __awaiter(_this, void 0, void 0, function () {
                            return __generator(this, function (_a) {
                                if (err) {
                                    console.log("Session information could not be written in", this.sessionPath);
                                }
                                return [2 /*return*/];
                            });
                        }); });
                        return [2 /*return*/];
                }
            });
        });
    };
    OnlineJudge.prototype.closeAllOtherTabs = function (context) {
        return __awaiter(this, void 0, void 0, function () {
            var pages, i;
            return __generator(this, function (_a) {
                pages = context.pages();
                for (i = 1; i < pages.length; i++) {
                    pages[i].close();
                }
                return [2 /*return*/];
            });
        });
    };
    OnlineJudge.prototype.getLangAliasesObject = function (langExtension, config) {
        var _a;
        return (_a = config.languages[langExtension]) === null || _a === void 0 ? void 0 : _a.aliases;
    };
    OnlineJudge.prototype.getLangAlias = function (filePath, config) {
        var lang = Util_1.default.getExtensionName(filePath);
        var langAliases = this.getLangAliasesObject(lang, config);
        /* TODO: make <key, value> object with Online Judge Name as key
                 and langAliases as value. Then, we can iterate over it
                 instead of writing one line per Online Judge */
        switch (this.onlineJudgeName) {
            case OnlineJudgeName.codeforces:
                return langAliases === null || langAliases === void 0 ? void 0 : langAliases.codeforces;
            case OnlineJudgeName.atcoder:
                return langAliases === null || langAliases === void 0 ? void 0 : langAliases.atcoder;
            case OnlineJudgeName.omegaup:
                return langAliases === null || langAliases === void 0 ? void 0 : langAliases.omegaup;
            case OnlineJudgeName.szkopul:
                return langAliases === null || langAliases === void 0 ? void 0 : langAliases.szkopul;
            case OnlineJudgeName.yandex:
                return langAliases === null || langAliases === void 0 ? void 0 : langAliases.yandex;
            default:
                return undefined;
        }
    };
    OnlineJudge.prototype.openBrowserInUrl = function (url, useUserDefaultBrowser) {
        return __awaiter(this, void 0, void 0, function () {
            var browser, context_1, pages, page, _a, _1;
            var _this = this;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        _b.trys.push([0, 10, , 11]);
                        if (!useUserDefaultBrowser) return [3 /*break*/, 2];
                        return [4 /*yield*/, open_1.default(url)];
                    case 1:
                        _b.sent();
                        return [3 /*break*/, 9];
                    case 2: return [4 /*yield*/, playwright_chromium_1.chromium.launch({ headless: false })];
                    case 3:
                        browser = _b.sent();
                        return [4 /*yield*/, this.restoreSession(browser)];
                    case 4:
                        context_1 = _b.sent();
                        context_1.on("page", function (_) { return _this.closeAllOtherTabs(context_1); });
                        pages = context_1.pages();
                        if (!(pages.length > 0)) return [3 /*break*/, 5];
                        _a = pages[0];
                        return [3 /*break*/, 7];
                    case 5: return [4 /*yield*/, context_1.newPage()];
                    case 6:
                        _a = _b.sent();
                        _b.label = 7;
                    case 7:
                        page = _a;
                        page.on("close", function (_) { return process_1.exit(0); });
                        return [4 /*yield*/, page.goto(url)];
                    case 8:
                        _b.sent();
                        _b.label = 9;
                    case 9: return [3 /*break*/, 11];
                    case 10:
                        _1 = _b.sent();
                        // This line apparently never gets executed
                        console.log("Browser closed");
                        return [3 /*break*/, 11];
                    case 11: return [2 /*return*/];
                }
            });
        });
    };
    OnlineJudge.prototype.login = function () {
        return __awaiter(this, void 0, void 0, function () {
            var browser, context, pages, page, _a, e_1;
            var _this = this;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0: return [4 /*yield*/, playwright_chromium_1.chromium.launch({ headless: false })];
                    case 1:
                        browser = _b.sent();
                        return [4 /*yield*/, this.restoreSession(browser)];
                    case 2:
                        context = _b.sent();
                        context.on("page", function (_) { return _this.closeAllOtherTabs(context); });
                        pages = context.pages();
                        if (!(pages.length > 0)) return [3 /*break*/, 3];
                        _a = pages[0];
                        return [3 /*break*/, 5];
                    case 3: return [4 /*yield*/, context.newPage()];
                    case 4:
                        _a = _b.sent();
                        _b.label = 5;
                    case 5:
                        page = _a;
                        _b.label = 6;
                    case 6:
                        _b.trys.push([6, 16, , 17]);
                        return [4 /*yield*/, page.goto(this.loginUrl)];
                    case 7:
                        _b.sent();
                        _b.label = 8;
                    case 8: return [4 /*yield*/, this.isLoggedIn(page)];
                    case 9:
                        if (!!(_b.sent())) return [3 /*break*/, 13];
                        if (!(page.url() !== this.loginUrl)) return [3 /*break*/, 11];
                        return [4 /*yield*/, page.goto(this.loginUrl)];
                    case 10:
                        _b.sent();
                        _b.label = 11;
                    case 11: return [4 /*yield*/, page.waitForNavigation({ timeout: 0 })];
                    case 12:
                        _b.sent();
                        return [3 /*break*/, 8];
                    case 13:
                        console.log("Succesful login!");
                        return [4 /*yield*/, this.saveSession(context)];
                    case 14:
                        _b.sent();
                        return [4 /*yield*/, browser.close()];
                    case 15:
                        _b.sent();
                        return [3 /*break*/, 17];
                    case 16:
                        e_1 = _b.sent();
                        console.log("Unsuccesful login!");
                        process_1.exit(0); // this helps to avoid printing any further errors
                        return [3 /*break*/, 17];
                    case 17: return [2 /*return*/];
                }
            });
        });
    };
    OnlineJudge.prototype.submit = function (filePath, url, config, langAlias) {
        return __awaiter(this, void 0, void 0, function () {
            var browser, context, pages, page, _a, result, langAliasFromConfig, _2, e_2;
            var _this = this;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0: return [4 /*yield*/, playwright_chromium_1.chromium.launch({ headless: true })];
                    case 1:
                        browser = _b.sent();
                        return [4 /*yield*/, this.restoreSession(browser)];
                    case 2:
                        context = _b.sent();
                        pages = context.pages();
                        if (!(pages.length > 0)) return [3 /*break*/, 3];
                        _a = pages[0];
                        return [3 /*break*/, 5];
                    case 3: return [4 /*yield*/, context.newPage()];
                    case 4:
                        _a = _b.sent();
                        _b.label = 5;
                    case 5:
                        page = _a;
                        return [4 /*yield*/, page.route("**/*", function (route) {
                                if (_this.blockedResourcesOnSubmit.has(route.request().resourceType())) {
                                    route.abort();
                                }
                                else {
                                    route.continue();
                                }
                            })];
                    case 6:
                        _b.sent();
                        return [4 /*yield*/, page.goto(url)];
                    case 7:
                        _b.sent();
                        return [4 /*yield*/, this.isLoggedIn(page)];
                    case 8:
                        if (!!(_b.sent())) return [3 /*break*/, 13];
                        return [4 /*yield*/, this.login()];
                    case 9:
                        _b.sent();
                        return [4 /*yield*/, context.clearCookies()];
                    case 10:
                        _b.sent();
                        return [4 /*yield*/, context.addCookies(this.getSession())];
                    case 11:
                        _b.sent();
                        return [4 /*yield*/, page.goto(url)];
                    case 12:
                        _b.sent();
                        _b.label = 13;
                    case 13:
                        _b.trys.push([13, 26, , 27]);
                        result = void 0;
                        if (!langAlias) return [3 /*break*/, 15];
                        return [4 /*yield*/, this.uploadFile(filePath, page, langAlias)];
                    case 14:
                        result = _b.sent();
                        return [3 /*break*/, 18];
                    case 15:
                        langAliasFromConfig = this.getLangAlias(filePath, config);
                        if (!langAliasFromConfig) return [3 /*break*/, 17];
                        return [4 /*yield*/, this.uploadFile(filePath, page, langAliasFromConfig)];
                    case 16:
                        result = _b.sent();
                        return [3 /*break*/, 18];
                    case 17:
                        console.log(this.onlineJudgeName + " alias for \"" + Util_1.default.getExtensionName(filePath) + "\" was not found in config file.");
                        process_1.exit(0);
                        _b.label = 18;
                    case 18:
                        if (result) {
                            console.log("File submitted succesfully");
                        }
                        else {
                            console.log("Error: File was not submitted");
                        }
                        return [4 /*yield*/, this.saveSession(context)];
                    case 19:
                        _b.sent();
                        return [4 /*yield*/, browser.close()];
                    case 20:
                        _b.sent();
                        if (!(result && config.showStatusPageOnSubmit)) return [3 /*break*/, 25];
                        _b.label = 21;
                    case 21:
                        _b.trys.push([21, 23, , 25]);
                        // waiting for half a second also fixes the error:
                        // -> route.continue: Target page, context or browser has been closedError
                        // when you submit for the very first time after installing cpbooster
                        //await new Promise((resolve) => setTimeout(resolve, 500));
                        return [4 /*yield*/, this.openBrowserInUrl(page.url(), config.useUserDefaultBrowser)];
                    case 22:
                        // waiting for half a second also fixes the error:
                        // -> route.continue: Target page, context or browser has been closedError
                        // when you submit for the very first time after installing cpbooster
                        //await new Promise((resolve) => setTimeout(resolve, 500));
                        _b.sent();
                        return [3 /*break*/, 25];
                    case 23:
                        _2 = _b.sent();
                        // fixes the error: route.continue: Target page, context or browser has been closedError
                        // when you submit for the very first time after installing cpbooster
                        return [4 /*yield*/, this.openBrowserInUrl(page.url(), config.useUserDefaultBrowser)];
                    case 24:
                        // fixes the error: route.continue: Target page, context or browser has been closedError
                        // when you submit for the very first time after installing cpbooster
                        _b.sent();
                        return [3 /*break*/, 25];
                    case 25: return [3 /*break*/, 27];
                    case 26:
                        e_2 = _b.sent();
                        console.log("Error: File was not submitted");
                        process_1.exit(0);
                        return [3 /*break*/, 27];
                    case 27: return [2 /*return*/];
                }
            });
        });
    };
    return OnlineJudge;
}());
exports.default = OnlineJudge;
